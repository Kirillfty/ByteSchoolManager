// <auto-generated />
using System;
using ByteSchoolManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ByteSchoolManager.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250603185810_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ByteSchoolManager.Entities.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfCoach")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfCoach")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoachId")
                        .HasColumnType("integer");

                    b.Property<string>("NameOfParent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfStudent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfParent")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfStudent")
                        .HasColumnType("integer");

                    b.Property<string>("SurNameOfParent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurNameOfStudent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.StudentTimeTableLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("TimetableLessonsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TimetableLessonsId");

                    b.ToTable("StudentTimeTableLessons");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.StudentWorkedLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkedLessonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("WorkedLessonId");

                    b.ToTable("StudentWorkedLessons");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.TimeTableLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("integer");

                    b.Property<string>("Curs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DayOfWeekend")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeOfEndKurs")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeOfLesson")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeOfStartKurs")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("TimeTableLessons");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.WorkedLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DayOfWorkedLesson")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TimeTableLessonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("TimeTableLessonId");

                    b.ToTable("WorkedLessons");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.Student", b =>
                {
                    b.HasOne("ByteSchoolManager.Entities.Coach", null)
                        .WithMany("Students")
                        .HasForeignKey("CoachId");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.StudentTimeTableLesson", b =>
                {
                    b.HasOne("ByteSchoolManager.Entities.Student", "student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteSchoolManager.Entities.TimeTableLesson", "TimetableLessons")
                        .WithMany()
                        .HasForeignKey("TimetableLessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimetableLessons");

                    b.Navigation("student");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.StudentWorkedLesson", b =>
                {
                    b.HasOne("ByteSchoolManager.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteSchoolManager.Entities.WorkedLesson", "WorkedLesson")
                        .WithMany()
                        .HasForeignKey("WorkedLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("WorkedLesson");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.TimeTableLesson", b =>
                {
                    b.HasOne("ByteSchoolManager.Entities.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.WorkedLesson", b =>
                {
                    b.HasOne("ByteSchoolManager.Entities.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ByteSchoolManager.Entities.TimeTableLesson", "TimeTableLesson")
                        .WithMany()
                        .HasForeignKey("TimeTableLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("TimeTableLesson");
                });

            modelBuilder.Entity("ByteSchoolManager.Entities.Coach", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
